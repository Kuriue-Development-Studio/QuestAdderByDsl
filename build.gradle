plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id("io.papermc.paperweight.userdev") version "1.5.11"
    id 'maven-publish'
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

group = 'org.gang'
version = 'release'
def apiversiond = "1.1.6"
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'papermc'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven { url = "https://jitpack.io" }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }
    maven { url "https://s01.oss.sonatype.org/content/groups/public/" }
    maven {
        credentials {
            username = repoUsername
            password = repoPassword
        }
        url "http://nexus.dominicus.kr:8081/repository/RPG/"
        allowInsecureProtocol = true
    }
    maven {
        url "http://nexus.dominicus.kr:8081/repository/RPG/"
        allowInsecureProtocol = true
    }
    maven {
        url "http://nexus.dominicus.kr:8081/repository/debugcat-release/"
        allowInsecureProtocol = true
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.20.4-R0.1-SNAPSHOT")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'xyz.icetang.lib:kommand-api:3.1.11'
    implementation("io.github.monun:heartbeat-coroutines:0.0.5")
    implementation 'io.github.monun:invfx-api:3.3.2'
    implementation 'taewookim:RPGParty:release'
    implementation 'taewookim:RPGCore:release'
    implementation 'taewookim:RPGPlayerInformation:release'

}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

kotlin {
    jvmToolchain(17)
}
task copyAPI(type: Copy) {
    doFirst { println 'copying built plugin ...' }
    from 'C:\\Users\\wagwa\\IdeaProjects\\api project\\DebugCatApi\\build\\libs\\' + 'debugcat-'+apiversiond+'.jar'
    into 'C:\\Users\\wagwa\\Downloads\\paper 1.20.4\\plugins\\'

    doLast {
        println 'copied built plugin!'
    }
}
task copyPlugin(type: Copy) {
    dependsOn reobfJar
    doFirst { println 'copying built plugin ...' }
    from 'build/libs/' + 'please-1.0-SNAPSHOT.jar'
    into 'C:\\Users\\wagwa\\Downloads\\paper 1.20.4\\plugins\\'

    doLast {
        println 'copied built plugin! '
    }
}
// Configure the jar task to output to the desired directory
tasks.reobfJar {
}
task cleanAndRedownloadDebugCat(type: Delete) {
    description = 'Deletes cached DebugCat dependency and redownloads it'
    delete fileTree(dir: "${rootProject.gradle.gradleUserHomeDir}/caches/modules-2/files-2.1", include: '**/debugcat-'+apiversiond+'.jar')

}

task cleanRedownloadDebugCatBuild(dependsOn: ['cleanAndRedownloadDebugCat', 'build']) {
    description = 'Cleans cached DebugCat dependency, redownloads it, and builds the project'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId group
            artifactId project.name
            version version

            artifact("build/libs/$project.name-$version" + ".jar") {
                extension 'jar'
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = repoUsername
                password = repoPassword
            }
            def releasesRepoUrl = "http://nexus.dominicus.kr:8081/repository/RPG/"
            url = releasesRepoUrl
            allowInsecureProtocol = true
        }
    }
}
